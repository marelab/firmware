#FROM debian:bullseye-slim AS builder
FROM debian:bookworm-slim AS builder

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install build deps
USER root
RUN apt-get update && \
	apt-get -y install wget python3 g++ zip python3-venv git vim ca-certificates libgpiod-dev libyaml-cpp-dev libbluetooth-dev libgpiod2 openssl libssl-dev libulfius-dev libgpiod2 liborcania-dev bash tar gzip && gunzip --version

#################################################################
# build stage
#################################################################
# create a non-priveleged user & group
RUN groupadd -g 1000 mesh && useradd -ml -u 1000 -g 1000 mesh


USER mesh

#git clone https://github.com/meshtastic/firmware --recurse-submodules /tmp/firmware && \
RUN wget --inet4-only https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py -O /tmp/get-platformio.py
RUN	chmod +x /tmp/get-platformio.py && \
	python3 /tmp/get-platformio.py 
ARG CACHEBUST=1
RUN	git clone https://github.com/marelab/firmware --branch docker --recurse-submodules /tmp/firmware && \
	cd /tmp/firmware && \
	chmod +x /tmp/firmware/bin/build-native.sh && \
	source ~/.platformio/penv/bin/activate && \
	./bin/build-native.sh


#################################################################
# prepare stage
# - copy executable meshstatic from build
# - getting web gui content from repos
# - setting up dir for web
# - preparing yaml config for features to use
#################################################################
# Copy the build to home dir
RUN cp /tmp/firmware/release/meshtasticd_linux_$(arch) /home/mesh/ && \
    mkdir /home/mesh/dockerhost
COPY startmesh.sh /home/mesh/startmesh.sh



	

# Creat Web Content Dir
RUN mkdir /home/mesh/web && \
	cd /home/mesh/web
# Pull meshtastic web archive and get webpages into web dir
USER root
RUN cd /home/mesh/web && \
	wget https://github.com/meshtastic/web/releases/download/latest/build.tar && \
	tar xvf build.tar && \
	rm build.tar && \
	gunzip /home/mesh/web/*
# Put config.yaml into /etc/meshtasticd
RUN mkdir /etc/meshtasticd && \
	cp /tmp/firmware/docker/config-4docker.yaml /etc/meshtasticd/config.yaml
RUN chown mesh:mesh /home/mesh/startmesh.sh

# Create a shared folder to persitent Meshtastis/NodeDB & Portdunio settings on the host system
# because the container would lose all changed configuration when stoped & restarted
# /mnt/host
	
#FROM frolvlad/alpine-glibc:glibc-2.31

#RUN apk --update add --no-cache g++ shadow && \
#	groupadd -g 1000 mesh && useradd -ml -u 1000 -g 1000 mesh

#COPY --from=builder /tmp/firmware/release/meshtasticd_linux_x86_64 /home/mesh/

USER mesh
WORKDIR /home/mesh
RUN cp /tmp/firmware/release/meshtasticd_linux_$(arch) /home/mesh/dockerhost/ && \
	cp /home/mesh/startmesh.sh  /home/mesh/dockerhost/ 
#	source export HOME=~/dockerhost
#CMD sh -cx "~/meshtasticd_linux_$(arch) --hwid '${HWID:-$RANDOM}'"

HEALTHCHECK NONE
